snippet rc
	import React from 'react';
	import PropTypes from 'prop-types';

	class ${1:} extends React.Component {
		static propTypes = {

		}

		render() {
		  return (
			  <p>$1</p>
			);
		}
	}

	export default $1;
snippet rf
	import React from 'react';
	import PropTypes from 'prop-types';

	const ${1:} = () => {
	  return (<div />);
	};

	$1.propTypes = {

	}

	export default $1;
snippet rt
	import React from 'react';
	import * as Enzyme from 'enzyme';

	describe('${1:}', () => {
		const getWrapper = (overrideProps, renderMethod = 'shallow') => {
			const defaultProps = {

			};
	    return Enzyme[renderMethod](<$1 {...defaultProps} {...overrideProps} />);
	  };

		it('${2}', () => {

		});
	});
snippet a!
	(${1}) => {${2}}
snippet as!
	(${1}) => (
	  ${2}
	);
snippet desc
	describe('${1}', () => {
		it('${2}', () => {
		  ${3}
		});
	});
snippet it
	it('${1}', () => {
	  ${2}
	});
snippet exp
	expect(${1}).to.equal(${2})
snippet wrap
	const wrapper = getWrapper(${1});
