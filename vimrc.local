colorscheme jellybeans

" set relativenumber

syntax on
set autoindent
filetype indent on
filetype plugin on

" markdown spelling errors are annoying
autocmd BufRead,BufNewFile *.md set nospell

let g:rspec_runner = "os_x_iterm"
nnoremap <Leader>p :CtrlP<Return>
nnoremap <Leader>m :Move
nnoremap <Leader>r :Rename
nnoremap <Leader>db :edit db/structure.sql<Return>
nnoremap <Leader>o :edit config/routes.rb<Return>
" kill search highlighting
nnoremap <Leader>n :noh<Return>
" find stuff
nnoremap <leader>? :Grepper -tool ag -open -switch -cword -noprompt<cr>
" search results forward / back
nnoremap <leader>c :cn<cr>
nnoremap <leader>b :cb<cr>

" easy indent
map <Leader>i mmgg=G`m<CR>

map <Leader>v :split<CR>
" open test/file in split for rails
map <Leader>q :split<CR>:A<CR>

" copy paste w/leader uses clipboard
map  <leader>Y  "+yg_
map <leader>P "+p

" testing stuff
nnoremap <Leader>a :TestSuite<Return>
nnoremap <Leader>t :TestFile<Return>
nnoremap <Leader>l :TestLast<Return>
nnoremap <Leader>s :TestNearest<Return>
" scroll through test terminal output
if has('nvim')
  tmap <C-o> <C-\><C-n>
endif

" snippets with shift + tab
imap <S-Tab> <Plug>snipMateNextOrTrigger
smap <S-Tab> <Plug>snipMateNextOrTrigger
" imap <Tab> <Plug>snipMateNextOrTrigger

" es6 config
autocmd BufRead,BufNewFile *.es6 setfiletype javascript

" handlebars
au BufReadPost *.hbs set syntax=html
" elixir templates
" au BufReadPost *.eex set syntax=html
" prisma graphql
au BufReadPost *.prisma set syntax=graphql

" goodies
" extract local var to let
map <Leader>let yy?describe<Return>pi:<ESC>ys2w)ilet<ESC>/=<Return>2xys${==


" ale don't eat my cpu please
let g:ale_lint_on_text_changed = 0
let g:ale_lint_on_enter = 0
let g:ale_lint_on_save = 1

" override so ale only lints on save
augroup ale
  autocmd!

  if g:has_async
    autocmd VimEnter *
      \ set updatetime=1000 |
      \ let g:ale_lint_on_text_changed = 0
  else
    echoerr "The thoughtbot dotfiles require NeoVim or Vim 8"
  endif
augroup END

let g:ale_fixers = {
\   '*': ['remove_trailing_lines', 'trim_whitespace'],
\   'javascript': ['prettier', 'eslint'],
\}

let g:ale_fix_on_save = 1

" https://github.com/kien/ctrlp.vim/issues/174
if executable('ag')
  " Use The Silver Searcher https://github.com/ggreer/the_silver_searcher
  set grepprg=ag\ --nogroup\ --nocolor
  " Use ag in CtrlP for listing files. Lightning fast, respects .gitignore
  " and .agignore. Ignores hidden files by default.
  let g:ctrlp_user_command = 'ag %s -l --nocolor -f -g ""'
else
  "ctrl+p ignore files in .gitignore
  let g:ctrlp_user_command = ['.git', 'cd %s && git ls-files . -co --exclude-standard', 'find %s -type f']
endif

" allow project-level vimrc
set exrc
" disable unsafe commands coming from project-level vimrc
set secure
